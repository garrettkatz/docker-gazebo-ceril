<launch>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <!--<arg name="model" default="$(find poppy-description)/urdf/Poppy_Humanoid.URDF"/>-->


  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" />

  <env name="GAZEBO_RESOURCE_PATH" value="/home/amul/poppy-ws/src/poppy-control"/>
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <param name="robot_description" command="$(find xacro)/xacro.py $(find poppy-description)/urdf/Poppy_Humanoid.URDF" />

  <!--<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />-->

  <!-- Spawn a robot into Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find poppy-description)/urdf/Poppy_Humanoid.URDF -urdf -x 0 -y 0 -z 1 -model Poppy_Humanoid" />

  <!-- Robot model and controllers using a JointGroupEffortController -->
  <include file="$(find tiger_gazebo)/launch/group_controllers.launch">
    <arg name="robot" default="$(arg robot)"/>
  </include>

  <include
    file="$(find pr2_controller_manager)/controller_manager.launch" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />



<!--  <node name="Publisher" pkg="poppy-control" type="poppy_first.py"
    required="true" />
-->
</launch>
